#########
# STARK #
#########
# Usage: docker-compose up

version: '3'

############
# SERVICES #
############

services:

    #setup
    stark-module-structuralvariation-submodule-decon-service-setup:
        image: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_IMAGE}
        build:
            context: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_IMAGE_CONTEXT}
            dockerfile: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_IMAGE_CONTEXT_DOCKERFILE}
        entrypoint: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_CONTAINER_ENTRYPOINT}
        command: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_CONTAINER_COMMAND}
        container_name: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_CONTAINER_NAME}
        restart: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_CONTAINER_RESTART}
        env_file:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_CONTAINER_ENV_FILE}
            - ${DOCKER_STARK_MODULE_SUBMODULE_ENV}
            - ${DOCKER_STARK_MODULE_ENV}
        environment:
            - SLEEP=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_PARAM_SLEEP}
        volumes:
            # Services
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_HOST_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_INNER_FOLDER_SERVICES}:rw
            # Config
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_HOST_FOLDER_CONFIG}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_SETUP_INNER_FOLDER_CONFIG}:rw
            # Volumes for databases access
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATABASES}:${DOCKER_STARK_INNER_FOLDER_DATABASES}:rw
        networks: 
            - ${DOCKER_STARK_MAIN_NETWORK}

    # cli
    stark-module-structuralvariation-submodule-decon-service-cli:
        image: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_IMAGE}
        build:
            #depends_on: - stark-module-structuralvariation-submodule-decon-service-setup
            context: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_IMAGE_CONTEXT}
            dockerfile: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_IMAGE_CONTEXT_DOCKERFILE}
        container_name: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_CONTAINER_NAME}
        restart: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_CONTAINER_RESTART}
        entrypoint: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_CONTAINER_ENTRYPOINT}
        command: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_CONTAINER_COMMAND}
        env_file:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_CONTAINER_ENV_FILE}
            - ${DOCKER_STARK_MODULE_SUBMODULE_ENV}
            - ${DOCKER_STARK_MODULE_ENV}
        environment:
            - SLEEP=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_PARAM_SLEEP}
        volumes:
             # Volumes for access, deposit and store results
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_REPOSITORY}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_REPOSITORY}:rw
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_DEPOSITORY}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_DEPOSITORY}:rw
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_ARCHIVES}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_ARCHIVES}:rw
            # Access to raw datas (no need for this module)
            # - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATA}:${DOCKER_STARK_INNER_FOLDER_DATA}:ro
            # Volumes for config and services folders
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_HOST_FOLDER_CONFIG}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_INNER_FOLDER_CONFIG}:ro
            # Service should be rw to copy logs into it
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_HOST_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_INNER_FOLDER_SERVICES}:rw
            # Volumes for databases access (ro only)
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATABASES}:${DOCKER_STARK_INNER_FOLDER_DATABASES}:ro
            # for AnnotSV databases access (ro only)
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_PARAM_ANNOTSV_HOST_PATTERN}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_PARAM_ANNOTSV_INNER}:ro
            # for AnnotSV OMIM replacement database (use the most current database available) (ro only)
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_PARAM_OMIM_HOST_PATTERN}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_PARAM_OMIM_INNER}:ro
        networks: 
            - ${DOCKER_STARK_MAIN_NETWORK}


    # listener
    stark-module-structuralvariation-submodule-decon-service-listener:
        image: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_IMAGE}
        container_name: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_CONTAINER_NAME}
        entrypoint: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_CONTAINER_ENTRYPOINT}
        command: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_CONTAINER_COMMAND}
        restart: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_CONTAINER_RESTART}
        env_file:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_CONTAINER_ENV_FILE}
            - ${DOCKER_STARK_MODULE_SUBMODULE_ENV}
            - ${DOCKER_STARK_MODULE_ENV}
        environment:
            # Those variables are the inputs of the common listener
            # Each line is an argument of listener.py
            # ('MICROSERVICE_MONTAGE'), os.getenv('MICROSERVICE_IMAGE'), os.getenv('MICROSERVICE_LAUNCH')
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_IMAGE}
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_MICROSERVICE_LAUNCH}
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_MICROSERVICE_NAME}
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_JSON}
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_CONF}
            # Daemon variables
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_DAEMON_RUN_EXISTENCE}
            # Delay
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_DAEMON_DELAY}
        volumes:
            # Volumes for access, deposit and store results
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_REPOSITORY}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_REPOSITORY}:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_DEPOSITORY}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_DEPOSITORY}:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_ARCHIVES}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_ARCHIVES}:ro
            # Volumes for config and services folders
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_HOST_FOLDER_CONFIG}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_INNER_FOLDER_CONFIG}:ro
            # Service should be rw to copy logs into it
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_HOST_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_INNER_FOLDER_SERVICES}:rw
            # Volumes for databases access
            #- ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATABASES}:${DOCKER_STARK_INNER_FOLDER_DATABASES}:ro
            # Access to the launcher.py
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_HOST_FOLDER_CONFIG_LAUNCHER}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_INNER_FOLDER_CONFIG_LAUNCHER}:ro
            # Allow access to portainer with /var/run/docker.sock
            - ${DOCKER_STARK_SOCK_MOUNT}
        networks: 
            - ${DOCKER_STARK_MAIN_NETWORK}

###########
# NETWORK #
###########

networks:
    
    stark_stark:
        external: true
