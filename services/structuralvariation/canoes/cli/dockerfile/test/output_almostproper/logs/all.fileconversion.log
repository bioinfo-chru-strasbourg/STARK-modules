#### AnnotSV2vcf ####
Recovery of fasta file
Delete header line
Dataframe from AnnotSV data (tsv)
#[INFO] dataf head                AnnotSV ID  SV chrom  ...  morbidGenesCandidates  AnnotSV ranking
0  2_170363030_170363270_         2  ...                    NaN              NaN
1  2_170363030_170363270_         2  ...                    NaN              NaN
2  2_170363030_170363270_         2  ...                    NaN              NaN
3    4_39188105_39196353_         4  ...                    yes              NaN
4    4_39188105_39196353_         4  ...                    yes              NaN

[5 rows x 74 columns]
Retrieving useful variable names
#[INFO] SV features: svtype: AnnotSV type 
 svchrom: SV chrom 
 svstart: SV start 
 sv_end: SV end
Recovery of name of samples
#[INFO] df columns Index(['AnnotSV ID', 'SV chrom', 'SV start', 'SV end', 'SV length', 'SV type',
       'Samples_ID', 'AnnotSV type', 'Gene name', 'NM', 'CDS length',
       'tx length', 'location', 'intersectStart', 'intersectEnd',
       'DGV_GAIN_IDs', 'DGV_GAIN_n_samples_with_SV',
       'DGV_GAIN_n_samples_tested', 'DGV_GAIN_Frequency', 'DGV_LOSS_IDs',
       'DGV_LOSS_n_samples_with_SV', 'DGV_LOSS_n_samples_tested',
       'DGV_LOSS_Frequency', 'GD_ID', 'GD_AN', 'GD_N_HET', 'GD_N_HOMALT',
       'GD_AF', 'GD_POPMAX_AF', 'GD_ID_others', 'DDD_SV',
       'DDD_DUP_n_samples_with_SV', 'DDD_DUP_Frequency',
       'DDD_DEL_n_samples_with_SV', 'DDD_DEL_Frequency', '1000g_event',
       '1000g_AF', '1000g_max_AF', 'IMH_ID', 'IMH_AF', 'IMH_ID_others',
       'promoters', 'dbVar_event', 'dbVar_variant', 'dbVar_status',
       'TADcoordinates', 'ENCODEexperiments', 'GCcontent_left',
       'GCcontent_right', 'Repeats_coord_left', 'Repeats_type_left',
       'Repeats_coord_right', 'Repeats_type_right', 'ACMG', 'HI_CGscore',
       'TriS_CGscore', 'DDD_status', 'DDD_mode', 'DDD_consequence',
       'DDD_disease', 'DDD_pmids', 'HI_DDDpercent', 'synZ_ExAC', 'misZ_ExAC',
       'pLI_ExAC', 'delZ_ExAC', 'dupZ_ExAC', 'cnvZ_ExAC', 'Mim Number',
       'Phenotypes', 'Inheritance', 'morbidGenes', 'morbidGenesCandidates',
       'AnnotSV ranking'],
      dtype='object')
#[INFO] list_sample_id ['SGT162459', 'SGT140392']
#[INFO] index  6
Remove duplicates
Recovery of ID
#[INFO] SAMPLES CHECK {'SGT162459', 'SGT140392'}
Traceback (most recent call last):
  File "./fileconversion/file_conversion_v2.0.1.py", line 729, in <module>
    annotsv2vcf()
  File "./fileconversion/file_conversion_v2.0.1.py", line 650, in annotsv2vcf
    dataf_2, dict, sample = deduplicate(dataf, sv_type)
  File "./fileconversion/file_conversion_v2.0.1.py", line 228, in deduplicate
    data_loc = dataf.loc[dataf[dataf.columns[index_sample]].str.contains(sple) == True, dataf.columns[0]]
  File "/usr/local/lib/miniconda3/envs/ngs/lib/python3.8/site-packages/pandas/core/strings/accessor.py", line 116, in wrapper
    return func(self, *args, **kwargs)
  File "/usr/local/lib/miniconda3/envs/ngs/lib/python3.8/site-packages/pandas/core/strings/accessor.py", line 1153, in contains
    if regex and re.compile(pat).groups:
  File "/usr/local/lib/miniconda3/envs/ngs/lib/python3.8/re.py", line 252, in compile
    return _compile(pattern, flags)
  File "/usr/local/lib/miniconda3/envs/ngs/lib/python3.8/re.py", line 294, in _compile
    return _cache[type(pattern), pattern, flags]
TypeError: unhashable type: 'set'
