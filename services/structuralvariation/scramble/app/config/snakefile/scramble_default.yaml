##########################################################################
# Config Yaml Version:     0.1
# Description:             Yaml file to run Snakefile SCRAMBLE module
##########################################################################
# DEV version 0.1 : 10/11/2021
# INT version 0.1 : 17/03/2022
# PROD version 1 : 03/06/2022
# Authoring : Thomas LAVAUX
# Add here variables that will extend default configuration yaml file.
# If a variable was already defined in the default configuration yaml file, it will be replace.
# launch snakemake -s snakefile_decon -c(numberofthreads) --config run=absolutepathoftherundirectory var1=0.05 var2=12
# separate multiple variable with a space
################## Directories and variables ##################

# Name of the module = {serviceName} from listener.py/launcher.py
serviceName: "SCRAMBLE"
# Specify a DATE_TIME value (for rerun)
DATE_TIME: ""
# Output directory
OUTPUT_DIR: ""
# Other path to copy results, leave empty to not copy, add a path to copy to this folder
# Replace by "depository" will copy the results in a second folder based on OUTPUT_DIR, replacing "repository" with "depository" if repository exist
DEPOT_DIR: "depository"
# Default path to the input datas == {run} from listener.py/launcher.py
run: ""

# Bed file
BED_FILE: ""
# Genes file
GENES_FILE: ""
# Transcripts file
TRANSCRIPTS_FILE: ""
# List genes
LIST_GENES: ""

# Samples list exclusion (not to be analyse) ; exclude if startwith, case insensitive
EXCLUDE_SAMPLE: ['POOL_', 'BlcADN', 'blanc', 'BlcPCR', 'blcPCR', 'Z_NTC', 'NTC', 'Blc']
# Sample filter, only those samples will be analysed
FILTER_SAMPLE: []

# Files to index into the dictionary depending on extension (endwith)
EXT_INDEX_LIST: [".cram", ".cram.crai", ".transcripts", ".genes.bed", ".design.bed", ".bam", ".bam.bai", ".list.genes", ".tag", ".ped", ".final.vcf.gz"]
# List of files extension to process
PROCESS_FILE: ['.bam', 'bam.bai']
# How to copy input files (bam, bai, cram) : ln or leave empty (it will rsync files & index bam)
PROCESS_CMD: 'ln'
# Append an aligner name if no empty (from sample.bam to sample.alignername.bam)
ALIGNER_NAME:
# Only analyse sample.validation.aligner.bam/cram files
VALIDATION_ONLY: False

# Extension files to copy after pipeline success
# using brace extension, remove space between extensions
INCLUDE_RSYNC: "{'*Full.vcf.gz','*Full.vcf.gz.tbi','*Design.vcf.gz','*Design.vcf.gz.tbi','*AnnotSV.Full.tsv','*AnnotSV.Design.tsv','*Panel*.vcf.gz','*Panel*.vcf.gz.tbi','*Panel*.tsv','*/'}"
# Extensions files to copy after pipeline failure
INCLUDE_LOG_RSYNC: "{'*.log','*.err','*Failed.txt'}"

##### Search parameters for inputs ####
RECURSIVE_SEARCH: False
SEARCH_ARGUMENT: ["/*/STARK/*", "/*/*"]

# Path of the template (template is serviceName_template.html)
TEMPLATE_DIR: "/app/template"
# List of extensions to include in the report.html
RESULT_EXT_LIST: ['.vcf.gz', '.vcf.gz.tbi']
# Option to filter vcf with bcftools
# ex "-i 'FORMAT/DP>=30 && FORMAT/VAF>=0.01'" or "-e 'SVLEN>=1000'" -e exclude -i include
BCFTOOLS_FILTER: "-e 'SVLEN<=-1000'"
################## Tools specific parameters ##################
# Default path to a FASTA file with .fasta reference genome (hg19/hg38 for ex)
REFGENEFA_PATH: "/STARK/databases/genomes/current/hg19.fa"


# Path of the dummy vcf
DUMMY_FILES: "/app/scripts/dummy"
# R scripts
R_SCRIPTS: "/app/scripts/R"
# Python scripts
PY_SCRIPTS: "/app/scripts/python"
# Path of the fileconversion json
VARIANT_CONVERT_CONFIG: "/app/config/fileconversion"


# Path to Scramble R directory scripts
SCRAMBLE_PATH: "/opt/conda/share/scramble/bin" # installed via conda
################## cluster_identifier params
m: 10 # min soft clipped bases to be put in a cluster (default 10)
s: 5 # min soft clipped reads to be a cluster (default 5)
r: all # region (default all : format ex chr9:1-20000)

################## scramble params
nCluster: 5 # min cluster size to analyze (default 5)
mei-score: 50 # min MEI alignment score to call (default 50)
poly-a-frac: 0.75 # fraction of clipped length for calling polyA tail in MEIs (default 0.75)
poly-a-dist: 100 # how far from MEI to look for polyA tail (default 100)
# choose to evaluate meis (default) or deletions or both
# --eval-meis / --eval-dels / --eval-meis --eval-dels
scramble_mode: "--eval-meis"
# Default path to an FASTA file with MEI Ref sequences
REFMEI_PATH: "/opt/conda/share/scramble/resources/MEI_consensus_seqs.fa"

################## AnnotSV params
genomeBuild: GRCh37 # GRCh38 default, set to GRCh37 for hg19
overlap: 100 # default 100
annotationMode: full # split, full or both (defaut both)
annotationdir: "/STARK/databases/AnnotSV/3.4/" # path to the annotation database
vcf_extension: ".final.vcf.gz" # vcf extension to annotate with the -snvIndelFiles option ; extension should be in EXT_INDEX_LIST